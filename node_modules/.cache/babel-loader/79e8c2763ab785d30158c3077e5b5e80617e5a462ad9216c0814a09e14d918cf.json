{"ast":null,"code":"var _jsxFileName = \"/home/sean/mikelee/BrainFlix/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport VideoPage from './pages/VideoPage/VideoPage';\nimport UploadPage from './pages/UploadPage/UploadPage';\nimport Header from './Components/sections/Header/Header';\nimport { useEffect, useState } from 'react';\nimport { getVideos } from './utilities/utilities';\nimport axios from 'axios';\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ** STATES ** //\n  const [defaultVideo, setDefaultVideo] = useState('84e96018-4022-434e-80bf-000ce4cd12b8');\n  const [currentVideoId, setCurrentVideoId] = useState(defaultVideo); // takes an id\n\n  // This is for the side panel\n  const [videos, setVideos] = useState();\n\n  //Video Details expanded are for a single video page\n  // find the video with the id == to current video id, then set those details down\n  const [videoExpandedDetails, setVideoExpandedDetails] = useState();\n\n  // **** FETCH USE EFFECT **** ///\n  const SEARCH_URL = `https://project-2-api.herokuapp.com`;\n  const searchByVideoId = videoId => `${SEARCH_URL}/videos/${videoId}`;\n  const searchVideosAll = `${SEARCH_URL}/videos`;\n\n  // * Fetch Total Video Data * //\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: videos\n        } = await axios.get(searchVideosAll);\n        const {\n          data: videodetails\n        } = await axios.get(searchByVideoId(currentVideoId));\n        const filteredVideos = getVideos(currentVideoId, videos);\n        setVideos(filteredVideos); // this sets the video list as all videos\n        setVideoExpandedDetails(videodetails);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, [currentVideoId]);\n  const handleVideoChange = videoId => {\n    setCurrentVideoId(videoId);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: `/videos/${defaultVideo}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"videos/:videoId\",\n        element: /*#__PURE__*/_jsxDEV(VideoPage, {\n          videos: videos,\n          videoExpandedDetails: videoExpandedDetails,\n          onVideoChange: handleVideoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/upload\",\n        element: /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"+D7Ww5DjEYWS/qtJY0kRUvC447w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Navigate","VideoPage","UploadPage","Header","useEffect","useState","getVideos","axios","NotFoundPage","jsxDEV","_jsxDEV","App","_s","defaultVideo","setDefaultVideo","currentVideoId","setCurrentVideoId","videos","setVideos","videoExpandedDetails","setVideoExpandedDetails","SEARCH_URL","searchByVideoId","videoId","searchVideosAll","fetchData","data","get","videodetails","filteredVideos","error","console","log","handleVideoChange","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onVideoChange","_c","$RefreshReg$"],"sources":["/home/sean/mikelee/BrainFlix/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\nimport VideoPage from './pages/VideoPage/VideoPage'\nimport UploadPage from './pages/UploadPage/UploadPage'\nimport Header from './Components/sections/Header/Header'\nimport { useEffect, useState } from 'react'\nimport { getVideos } from './utilities/utilities'\nimport axios from 'axios'\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage'\n\nfunction App() {\n\t// ** STATES ** //\n\tconst [defaultVideo, setDefaultVideo] = useState(\n\t\t'84e96018-4022-434e-80bf-000ce4cd12b8'\n\t)\n\tconst [currentVideoId, setCurrentVideoId] = useState(defaultVideo) // takes an id\n\n\t// This is for the side panel\n\tconst [videos, setVideos] = useState()\n\n\t//Video Details expanded are for a single video page\n\t// find the video with the id == to current video id, then set those details down\n\tconst [videoExpandedDetails, setVideoExpandedDetails] = useState()\n\n\t// **** FETCH USE EFFECT **** ///\n\tconst SEARCH_URL = `https://project-2-api.herokuapp.com`\n\tconst searchByVideoId = (videoId) => `${SEARCH_URL}/videos/${videoId}`\n\tconst searchVideosAll = `${SEARCH_URL}/videos`\n\n\t// * Fetch Total Video Data * //\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst { data: videos } = await axios.get(searchVideosAll)\n\t\t\t\tconst { data: videodetails } = await axios.get(\n\t\t\t\t\tsearchByVideoId(currentVideoId)\n\t\t\t\t)\n\n\t\t\t\tconst filteredVideos = getVideos(currentVideoId, videos)\n\t\t\t\tsetVideos(filteredVideos) // this sets the video list as all videos\n\t\t\t\tsetVideoExpandedDetails(videodetails)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n\t\t}\n\t\tfetchData()\n\t}, [currentVideoId])\n\n\tconst handleVideoChange = (videoId) => {\n\t\tsetCurrentVideoId(videoId)\n\t}\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Header />\n\t\t\t<Routes>\n\t\t\t\t<Route path='/' element={<Navigate to={`/videos/${defaultVideo}`} />} />\n\t\t\t\t<Route\n\t\t\t\t\tpath='videos/:videoId'\n\t\t\t\t\telement={\n\t\t\t\t\t\t<VideoPage\n\t\t\t\t\t\t\tvideos={videos}\n\t\t\t\t\t\t\tvideoExpandedDetails={videoExpandedDetails}\n\t\t\t\t\t\t\tonVideoChange={handleVideoChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<Route path='/upload' element={<UploadPage />} />\n\t\t\t\t<Route path='*' element={<NotFoundPage />} />\n\t\t\t</Routes>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}